name: System Tests

on:
  pull_request:
    branches:
      - main
      - 1.x
      - 2.x
  push:
    branches:
      - main
      - 1.x
      - 2.x

env:
  RAILS_ENV: test
  PGHOST: localhost
  PGUSER: postgres
  PGPORT: 5432
  POSTGRES_HOST: localhost
  POSTGRES_USERNAME: postgres
  POSTGRES_PORT: 5432
  BUNDLE_PATH_RELATIVE_TO_CWD: true
  AVO_LICENSE_KEY: license_123

jobs:
  system_specs:
    strategy:
      matrix:
        ruby:
          - '3.2.2'
        rails:
          - '6.0'
          - '6.1'
          - '7.0'
          - '7.1'
    runs-on: ubuntu-latest

    env:
      RAILS_VERSION: ${{matrix.rails}}
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rails_${{ matrix.rails }}_ruby_${{ matrix.ruby }}.gemfile

    services:
      postgres:
        image: postgres:10.8
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        # bundler-cache: true
        bundler: default
        ruby-version: ${{ matrix.ruby }}

    - uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-test-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-test-gems-${{ hashFiles('**/Gemfile.lock') }}

    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        bin/rails db:create
        bin/rails db:migrate

    - name: Get yarn cache directory path
      id: test-yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: test-yarn-cache
      with:
        path: ${{ steps.test-yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-test-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Yarn install the dummy app
      run: |
        cd spec/dummy
        yarn

    - name: Yarn install
      run: yarn

    - name: Run avo:sym_link
      run: |
        bundle exec rake avo:sym_link

    - name: Build assets
      env:
        RAILS_ENV: production
        NODE_ENV: production
      run: |
        yarn build:js
        yarn build:custom-js
        yarn build:css

    - name: Run tests
      id: run_tests
      run: bundle exec rspec spec/system

    - uses: actions/upload-artifact@v3
      if: always() && steps.run_tests.outcome == 'failure'
      with:
        name: rspec_failed_screenshots_rails_${{ matrix.rails }}_ruby_${{ matrix.ruby }}
        path: ./spec/dummy/tmp/screenshots
