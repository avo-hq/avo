name: TailwindCSS integration test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
# env:
#   workspace: 
#   RAILS_ENV: test
#   PGHOST: localhost
#   PGUSER: postgres
#   PGPORT: 5432
#   POSTGRES_HOST: localhost
#   POSTGRES_USERNAME: postgres
#   POSTGRES_PORT: 5432
#   BUNDLE_PATH_RELATIVE_TO_CWD: true
#   AVO_LICENSE_KEY: license_123
#   BUNDLE_RUBYGEMS__PKG__GITHUB__COM: adrianthedev:${{secrets.GH_REGISTRY_AVO_FILTERS_TOKEN}}

jobs:
  feature_specs:
    runs-on: ubuntu-latest

    # env:
      # RAILS_VERSION: ${{matrix.rails}}
      # BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/rails_${{ matrix.rails }}_ruby_${{ matrix.ruby }}.gemfile

    # services:
    #   postgres:
    #     image: postgres:10.8
    #     ports: ["5432:5432"]
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    # - uses: actions/checkout@v4
    #   repository

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        # bundler-cache: true
        bundler: default
        ruby-version: 3.3.0

    - name: PWD 1
      run: ls -la .
    - name: PWD 2
      run: pwd
    - name: PWD 3
      run: echo $GITHUB_WORKSPACE

    - name: Write test file
      uses: DamianReeves/write-file-action@master
      with:
        path: ${{github.workspace}}/test.rb
        contents: |
          #!/usr/bin/env ruby
          def get_compiled_file_contents
            asset_name = 'avo.tailwind'
            compiled_assets_path = File.join('public', 'assets').to_s

            # Find the compiled file with a matching name
            compiled_file = Dir[File.join(compiled_assets_path, "#{asset_name}-*")].first

            # Read the contents of the file, if it exists
            if compiled_file
              file_contents = File.read(compiled_file)
              # Now, `file_contents` holds the CSS content
            else
              # Handle the case where the file is not found
              puts "Compiled file for '#{asset_name}' not found."
            end
          end

          # Classes that are available in custom_tool.html.erb and most likely not available in the base Avo bundle
          test_classes = %w(aspect-video break-before-avoid float-end order-9 col-end-13 box-decoration-slice bg-gradient-to-r from-indigo-600 to-pink-500)

          # Build the assets
          `rake assets:precompile`

          contents = get_compiled_file_contents

          # Test if the built assets containe these classes
          test_classes.each do |class_name|
            exit(1) unless contents.include?(class_name)
          end
        write-mode: append

    - name: PWD 1
      run: ls -la .

    - name: Set up Rails
      run: |
        gem install rails

    - name: Set up repo
      run: |
        rails new test_repo -a propshaft
        cd test_repo
        bin/rails app:template LOCATION='https://avohq.io/app-template'
        bin/rails generate avo:tailwindcss:install
        bin/rails generate avo:tool custom_tool
        echo '<div class="aspect-video break-before-avoid float-end order-9 col-end-13 box-decoration-slice bg-gradient-to-r from-indigo-600 to-pink-500 text-white text-2xl font-bold">Test<br>DIV</div>' >> ./app/views/avo/tools/custom_tool.html.erb

    - name: PWD 1
      run: ls -la ./test_repo

    - name: Run test
      run: |
        ruby ${{github.workspace}}/test.rb
