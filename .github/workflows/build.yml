name: Build and Generate Ruby Gem on Tag Pushes

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:

    env:
      RAILS_ENV: production
      NODE_ENV: production

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
      with:
        ruby-version: 2.6.3

    - uses: release-drafter/release-drafter@v5
      id: release_drafter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-production-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-production-gems-

    - name: Bundle install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Get yarn cache directory path
      id: production-yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: production-yarn-cache
      with:
        path: ${{ steps.production-yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-production-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-production-yarn-

    - name: Yarn install
      run: bundle exec rails app:yarn:install

    - name: Bundle assets
      run: bin/webpack

    - name: Build gem
      run: bundle exec rails build

    - name: Get gem version
      id: gem_version
      run: |
        echo "::set-output name=tag::$(sed "s|refs/tags/v||" <<< ${{ github.ref }})"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{steps.release_drafter.outputs.body}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: pkg/avocado-${{steps.gem_version.outputs.tag}}.gem
        asset_name: avocado.gem
        asset_content_type: application/x-tar
