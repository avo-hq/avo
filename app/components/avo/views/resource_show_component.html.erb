<div data-model-id="<%= @resource.model.id %>"
  data-selected-resources-name="<%= @resource.model_key %>"
  data-selected-resources='["<%= @resource.model.id %>"]'
  class="space-y-12"
>
    <% if params[:tab_turbo_frame].present? %>
      <%# find that group %>
      <%# find the tool %>
      <%# render that tool only %>
      <%
      group = @resource.tab_groups.find do |group|
        group.turbo_frame_id == params[:tab_turbo_frame]
      end

      tab = group&.tabs.find do |tab|
        tab.name.to_s == params[:active_tab_name].to_s
      end
    %>
      <%#= group.inspect %>
      <% if tab.present? %>
        <%= render partial: 'avo/partials/tabs_show', locals: { group: group, active_tab: tab } %>
      <% end %>
    <% else %>
      <div class="space-y-12">
        <%# @todo: add turbo eager loading maybe %>
        <% @resource.tab_groups.each do |group| %>
          <div>
            <% active_tab_name = params[:active_tab_name] || group.tabs.first.name %>
            <% active_tab = group.tabs.find { |tab| tab.name == active_tab_name } %>
            <% active_tab.parse %>
            <%= render partial: 'avo/partials/tabs_show', locals: { group: group, active_tab: active_tab } %>
          </div>
        <% end %>
      </div>
    <% end %>
  <%#= @resource.items %>
  <% if tabs.present? %>
    <%= turbo_frame_tag "tabs_container" do %>
      <div class="mb-4">
        <%= render partial: 'avo/partials/tabs_toggle', locals: { tabs: tabs, active_tab_name: active_tab_name } %>
      </div>
      <%#= active_tab.inspect %>
      <% active_tab.tools.each do |tool| %>
        <% next if tool.blank? || tool.partial.blank? %>
        <%= render tool.partial, tool: tool %>
      <% end %>
    <% end %>
  <% end %>
  <%#= abort @resource.get_items.inspect %>
  <%= render Avo::PanelComponent.new(title: title, description: @resource.resource_description, display_breadcrumbs: @reflection.blank?, index: 0) do |c| %>
    <% c.tools do %>
      <% if @reflection.present? && @resource.model.present? %>
        <% if can_detach? %>
          <%= a_button url: detach_path,
                icon: 'detach',
                method: :delete,
                form_class: 'flex flex-col sm:flex-row sm:inline-flex',
                style: :text,
                data: {
                  confirm: "Are you sure you want to detach this #{title}."
                } do %>
            <%= t('avo.detach_item', item: title).capitalize %>
          <% end %>
          <%= render Avo::ActionsComponent.new actions: @actions, resource: @resource %>
        <% end %>
        <% if can_see_the_edit_button? %>
          <%= a_link edit_path,
                color: :primary,
                style: :primary,
                icon: 'edit' do %>
            <%= t('avo.edit').capitalize %>
          <% end %>
        <% end %>
      <% else %>
        <%= a_link back_path,
              style: :text,
              icon: 'arrow-left' do %>
          <%= t('avo.go_back') %>
        <% end %>
        <% if can_see_the_destroy_button? %>
          <%= a_button url: helpers.resource_path(model: @resource.model, resource: @resource),
                method: :delete,
                local: true,
                style: :text,
                title: t('avo.delete_item', item: @resource.model.model_name.name.downcase).capitalize,
                loading: true,
                confirm: t('avo.are_you_sure', item: @resource.model.model_name.name.downcase),
                color: :red,
                icon: 'trash',
                form_class: 'flex flex-col sm:flex-row sm:inline-flex',
                data: {
                  control: :destroy,
                  'resource-id': @resource.model.id,
                  'tippy': 'tooltip',
                } do %>
            <%= t('avo.delete').capitalize %>
          <% end %>
        <% end %>
        <%= render Avo::ActionsComponent.new actions: @actions, resource: @resource %>
        <% if @resource.authorization.authorize_action(:edit, raise_exception: false) %>
          <%= a_link edit_path,
                color: :primary,
                style: :primary,
                icon: 'edit' do %>
            <%= t('avo.edit').capitalize %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <% c.body do %>
      <%# <% if fields_by_panel[resource_panel[:name]].present? %>
        <div class="divide-y">
          <% @resource.get_base_items.each_with_index do |field, index| %>
            <%= render field.component_for_view(:show).new(field: field, resource: @resource, index: index) %>
          <% end %>
        </div>
      <%# <% end %>
    <% end %>
  <% end %>
  <%#= @resource.get_items.inspect %>
  <% @resource.get_items.each_with_index do |item, index| %>
    <% next if item.nil? %>
    <%= render partial: 'avo/partials/item_switcher', locals: { item: item, index: index } %>
  <% end %>
  <% if should_display_invalid_fields_errors? %>
    <turbo-stream action="append" target="alerts">
      <template>
        <% @resource.invalid_fields.each do |error| %>
          <%= render Avo::AlertComponent.new :error, error[:message] %>
        <% end %>
      </template>
    </turbo-stream>
  <% end %>
</div>
